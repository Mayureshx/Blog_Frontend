{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/postapi.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ManagePostsComponent_a_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 14);\n    i0.ɵɵtext(1, \"Manage Users\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ManagePostsComponent_tr_37_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 15);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵelement(4, \"img\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"a\", 17)(13, \"button\", 9);\n    i0.ɵɵtext(14, \"Update\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(15, \"\\u00A0 \");\n    i0.ɵɵelementStart(16, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function ManagePostsComponent_tr_37_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const post_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.deletePost(post_r2.postId));\n    });\n    i0.ɵɵtext(17, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const post_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r2.postId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"src\", \"data:image/png;base64,\", post_r2.postImage, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r2.postTitle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r2.postCreation);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", post_r2.postUpdation, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"href\", \"/update-post/\", post_r2.postId, \"\", i0.ɵɵsanitizeUrl);\n  }\n}\nexport class ManagePostsComponent {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n    this.userRole = localStorage.getItem(\"userRole\");\n    this.loginStatus = localStorage.getItem(\"loginStatus\");\n    this.userId = Number(localStorage.getItem(\"userId\"));\n    if (this.userRole == \"ADMIN\") {\n      this.service.getAllPosts().subscribe(response => {\n        console.log(response);\n        this.posts = response;\n      });\n    } else {\n      this.service.getPostsByUserId(this.userId).subscribe(response => {\n        console.log(response);\n        this.posts = response;\n      });\n    }\n  }\n  deletePost(postId) {\n    if (confirm('Do you really want to delete this post?')) {\n      this.service.deletePost(postId).subscribe(response => {\n        alert('post deleted!!');\n      });\n    }\n  }\n  logout() {\n    localStorage.clear();\n    this.router.navigate(['signin']);\n  }\n}\nManagePostsComponent.ɵfac = function ManagePostsComponent_Factory(t) {\n  return new (t || ManagePostsComponent)(i0.ɵɵdirectiveInject(i1.PostapiService), i0.ɵɵdirectiveInject(i2.Router));\n};\nManagePostsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ManagePostsComponent,\n  selectors: [[\"app-manage-posts\"]],\n  decls: 43,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"btn\", \"btn-primary\", \"float-end\", 3, \"click\"], [1, \"jumbotron\"], [1, \"display-4\"], [1, \"lead\"], [\"href\", \"/manage-posts\", \"role\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-sm\"], [\"href\", \"/manage-comments\", \"role\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-sm\"], [\"class\", \"btn btn-primary btn-sm\", \"href\", \"/manage-users\", \"role\", \"button\", 4, \"ngIf\"], [\"href\", \"/add-post\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-sm\"], [1, \"table\"], [1, \"thead-dark\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"href\", \"/manage-users\", \"role\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-sm\"], [\"scope\", \"row\"], [\"height\", \"30px\", \"alt\", \"Card image cap\", 1, \"card-img-top\", 3, \"src\"], [3, \"href\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"btn-sm\", 3, \"click\"]],\n  template: function ManagePostsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"br\");\n      i0.ɵɵelementStart(2, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ManagePostsComponent_Template_button_click_2_listener() {\n        return ctx.logout();\n      });\n      i0.ɵɵtext(3, \"Logout\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"h1\", 3);\n      i0.ɵɵtext(6, \"Manage Post\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"p\", 4)(8, \"a\", 5);\n      i0.ɵɵtext(9, \"Manage Posts\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(10, \"\\u00A0 \");\n      i0.ɵɵelementStart(11, \"a\", 6);\n      i0.ɵɵtext(12, \"Manage Comments\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(13, \"\\u00A0 \");\n      i0.ɵɵtemplate(14, ManagePostsComponent_a_14_Template, 2, 0, \"a\", 7);\n      i0.ɵɵtext(15, \"\\u00A0 \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(16, \"br\")(17, \"br\");\n      i0.ɵɵelementStart(18, \"a\", 8)(19, \"button\", 9);\n      i0.ɵɵtext(20, \"Add Post\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"table\", 10)(22, \"thead\", 11)(23, \"tr\")(24, \"th\", 12);\n      i0.ɵɵtext(25, \"Post Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"th\", 12);\n      i0.ɵɵtext(27, \"Image\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"th\", 12);\n      i0.ɵɵtext(29, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"th\", 12);\n      i0.ɵɵtext(31, \"Creation Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"th\", 12);\n      i0.ɵɵtext(33, \"Updation Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"th\", 12);\n      i0.ɵɵtext(35, \"Action\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(36, \"tbody\");\n      i0.ɵɵtemplate(37, ManagePostsComponent_tr_37_Template, 18, 6, \"tr\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(38, \"br\")(39, \"br\")(40, \"br\")(41, \"br\")(42, \"br\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngIf\", ctx.userRole == \"ADMIN\");\n      i0.ɵɵadvance(23);\n      i0.ɵɵproperty(\"ngForOf\", ctx.posts);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ManagePostsComponent","constructor","service","router","localStorage","getItem","Number","userRole","getAllPosts","subscribe","response","console","log","posts","getPostsByUserId","userId","deletePost","postId","confirm","alert","logout","clear","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Edubridge-Final-project\\Main Project\\blog-frontend-main\\blog-frontend-main (1)\\blog-frontend-main\\src\\app\\component\\manage-posts\\manage-posts.component.html","C:\\Edubridge-Final-project\\Main Project\\blog-frontend-main\\blog-frontend-main (1)\\blog-frontend-main\\src\\app\\component\\manage-posts\\manage-posts.component.ts"],"sourcesContent":["<div class=\"container\">\n  <br>\n  \n  <button class=\"btn btn-primary float-end \" (click)=\"logout()\">Logout</button>\n<div class=\"jumbotron\">\n  <h1 class=\"display-4\">Manage Post</h1>\n   <p class=\"lead\">\n    <a class=\"btn btn-primary btn-sm\" href=\"/manage-posts\" role=\"button\">Manage Posts</a>&nbsp;\n    <a class=\"btn btn-primary btn-sm\" href=\"/manage-comments\" role=\"button\">Manage Comments</a>&nbsp;\n    <a class=\"btn btn-primary btn-sm\" href=\"/manage-users\" role=\"button\" *ngIf=\"userRole=='ADMIN'\">Manage Users</a>&nbsp;\n  </p>\n</div>\n<br><br>\n\n<a href=\"/add-post\">\n\n<button type=\"button\" class=\"btn btn-primary btn-sm\">Add Post</button> \n\n</a>\n\n<table class=\"table\">\n  <thead class=\"thead-dark\">\n    <tr>\n      <th scope=\"col\">Post Id</th>\n      <th scope=\"col\">Image</th>\n      <th scope=\"col\">Title</th>\n      <th scope=\"col\">Creation Date</th>\n      <th scope=\"col\">Updation Date</th>\n      <th scope=\"col\">Action</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let post of posts\">\n      <th scope=\"row\">{{post.postId}}</th>\n      <td>  <img class=\"card-img-top\" src=\"data:image/png;base64,{{post.postImage}}\" height=\"30px\" alt=\"Card image cap\"></td>\n      <td>{{post.postTitle}}</td>\n      <td>{{post.postCreation}}</td>\n      <td> {{post.postUpdation}}</td>\n      <td>\n        <a href=\"/update-post/{{post.postId}}\">  <button type=\"button\" class=\"btn btn-primary btn-sm\">Update</button> </a>&nbsp;\n         <button type=\"button\" class=\"btn btn-secondary btn-sm\"  (click)=\"deletePost(post.postId)\">Delete</button>\n        </td>\n    </tr>\n    \n  </tbody>\n</table>\n<br><br><br><br><br>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PostapiService } from 'src/app/service/postapi.service';\n\n@Component({\n  selector: 'app-manage-posts',\n  templateUrl: './manage-posts.component.html',\n  styleUrls: ['./manage-posts.component.css']\n})\nexport class ManagePostsComponent {\n  \n  posts:any;\n  userRole:any=localStorage.getItem(\"userRole\");\n  loginStatus:any=localStorage.getItem(\"loginStatus\");\n \n  userId:any=Number(localStorage.getItem(\"userId\"));\n  constructor(private service:PostapiService,private router:Router)\n  {\n    if(this.userRole==\"ADMIN\")\n  {\n    this.service.getAllPosts().subscribe(\n      response => {\n        console.log(response);\n        this.posts=response;\n      }\n    );\n  }\n  else\n  {\n    this.service.getPostsByUserId(this.userId).subscribe(\n      response => {\n        console.log(response);\n        this.posts=response;\n      }\n    );\n    }\n  }\n\n  deletePost(postId:any)\n  {\n    if(confirm('Do you really want to delete this post?'))\n    {\n     this.service.deletePost(postId).subscribe(\n      response => {alert('post deleted!!');}\n      \n    );\n    }\n\n\n   \n  }\n\n  logout()\n  {\n    localStorage.clear();\n    this.router.navigate(['signin']);\n    \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}