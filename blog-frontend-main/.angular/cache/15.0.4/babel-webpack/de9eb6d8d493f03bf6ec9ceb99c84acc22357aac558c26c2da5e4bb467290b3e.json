{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/postapi.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ManageCommentsComponent_a_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 13);\n    i0.ɵɵtext(1, \"Manage Users\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ManageCommentsComponent_tr_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"a\", 14)(9, \"button\", 15);\n    i0.ɵɵtext(10, \"Update\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtext(11, \"\\u00A0 \");\n    i0.ɵɵelementStart(12, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function ManageCommentsComponent_tr_35_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const comment_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.deleteComment(comment_r2.commentId));\n    });\n    i0.ɵɵtext(13, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const comment_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(comment_r2.commentId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(comment_r2.content);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(comment_r2.post.postTitle);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"href\", \"/update-comment/\", comment_r2.commentId, \"\", i0.ɵɵsanitizeUrl);\n  }\n}\nexport class ManageCommentsComponent {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n    this.userRole = localStorage.getItem(\"userRole\");\n    this.loginStatus = localStorage.getItem(\"loginStatus\");\n    this.userId = Number(localStorage.getItem(\"userId\"));\n    if (this.userRole == \"ADMIN\") {\n      this.service.getAllComments().subscribe(response => {\n        console.log(response);\n        this.comments = response;\n      });\n    } else {\n      this.service.getCommentsByUserId(this.userId).subscribe(response => {\n        console.log(response);\n        this.comments = response;\n      });\n    }\n  }\n  deleteComment(commentId) {\n    if (confirm('Do you really want to delete this comment?')) {\n      this.service.deleteCommentByCommentId(commentId).subscribe(response => {\n        alert('comment deleted!!');\n        window.location.reload();\n      });\n    }\n  }\n  logout() {\n    localStorage.clear();\n    this.router.navigate(['signin']);\n  }\n}\nManageCommentsComponent.ɵfac = function ManageCommentsComponent_Factory(t) {\n  return new (t || ManageCommentsComponent)(i0.ɵɵdirectiveInject(i1.PostapiService), i0.ɵɵdirectiveInject(i2.Router));\n};\nManageCommentsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ManageCommentsComponent,\n  selectors: [[\"app-manage-comments\"]],\n  decls: 36,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"btn\", \"btn-primary\", \"float-end\", 3, \"click\"], [1, \"jumbotron\"], [1, \"display-4\"], [1, \"lead\"], [1, \"my-4\"], [\"href\", \"/manage-posts\", \"role\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-sm\"], [\"href\", \"/manage-comments\", \"role\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-sm\"], [\"class\", \"btn btn-primary btn-sm\", \"href\", \"/manage-users\", \"role\", \"button\", 4, \"ngIf\"], [1, \"table\"], [1, \"thead-dark\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"href\", \"/manage-users\", \"role\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-sm\"], [3, \"href\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-sm\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"btn-sm\", 3, \"click\"]],\n  template: function ManageCommentsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"br\");\n      i0.ɵɵelementStart(2, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ManageCommentsComponent_Template_button_click_2_listener() {\n        return ctx.logout();\n      });\n      i0.ɵɵtext(3, \"Logout\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"h1\", 3);\n      i0.ɵɵtext(6, \"Manage Comments\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"p\", 4);\n      i0.ɵɵtext(8, \"This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"hr\", 5);\n      i0.ɵɵelementStart(10, \"p\");\n      i0.ɵɵtext(11, \"It uses utility classes for typography and spacing to space content out within the larger container.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"p\", 4)(13, \"a\", 6);\n      i0.ɵɵtext(14, \"Manage Posts\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(15, \"\\u00A0 \");\n      i0.ɵɵelementStart(16, \"a\", 7);\n      i0.ɵɵtext(17, \"Manage Comments\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \"\\u00A0 \");\n      i0.ɵɵtemplate(19, ManageCommentsComponent_a_19_Template, 2, 0, \"a\", 8);\n      i0.ɵɵtext(20, \"\\u00A0 \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(21, \"br\")(22, \"br\");\n      i0.ɵɵelementStart(23, \"table\", 9)(24, \"thead\", 10)(25, \"tr\")(26, \"th\", 11);\n      i0.ɵɵtext(27, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"th\", 11);\n      i0.ɵɵtext(29, \"Comment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"th\", 11);\n      i0.ɵɵtext(31, \"Post Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"th\", 11);\n      i0.ɵɵtext(33, \"Action\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(34, \"tbody\");\n      i0.ɵɵtemplate(35, ManageCommentsComponent_tr_35_Template, 14, 4, \"tr\", 12);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngIf\", ctx.userRole == \"ADMIN\");\n      i0.ɵɵadvance(16);\n      i0.ɵɵproperty(\"ngForOf\", ctx.comments);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ManageCommentsComponent","constructor","service","router","localStorage","getItem","Number","userRole","getAllComments","subscribe","response","console","log","comments","getCommentsByUserId","userId","deleteComment","commentId","confirm","deleteCommentByCommentId","alert","window","location","reload","logout","clear","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Edubridge-Final-project\\Main Project\\blog-frontend-main\\blog-frontend-main (1)\\blog-frontend-main\\src\\app\\component\\manage-comments\\manage-comments.component.html","C:\\Edubridge-Final-project\\Main Project\\blog-frontend-main\\blog-frontend-main (1)\\blog-frontend-main\\src\\app\\component\\manage-comments\\manage-comments.component.ts"],"sourcesContent":["<div class=\"container\">\n    <br>\n    \n    <button class=\"btn btn-primary float-end \" (click)=\"logout()\">Logout</button>\n<div class=\"jumbotron\">\n    <h1 class=\"display-4\">Manage Comments</h1>\n    <p class=\"lead\">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.</p>\n    <hr class=\"my-4\">\n    <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>\n    <p class=\"lead\">\n      <a class=\"btn btn-primary btn-sm\" href=\"/manage-posts\" role=\"button\">Manage Posts</a>&nbsp;\n      <a class=\"btn btn-primary btn-sm\" href=\"/manage-comments\" role=\"button\">Manage Comments</a>&nbsp;\n      <a class=\"btn btn-primary btn-sm\" href=\"/manage-users\" role=\"button\" *ngIf=\"userRole=='ADMIN'\">Manage Users</a>&nbsp;\n    </p>\n  </div>\n  <br><br>\n \n<table class=\"table\">\n    <thead class=\"thead-dark\">\n      <tr>\n        <th scope=\"col\">Id</th>\n        <th scope=\"col\">Comment</th>\n        <th scope=\"col\">Post Title</th>\n        <th scope=\"col\">Action</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let comment of comments\">\n        \n        <td>{{comment.commentId}}</td>\n        <td>{{comment.content}}</td>\n        <td>{{comment.post.postTitle}}</td>\n        <td> <a href=\"/update-comment/{{comment.commentId}}\">  <button type=\"button\" class=\"btn btn-primary btn-sm\">Update</button> </a>&nbsp;\n          <button type=\"button\" class=\"btn btn-secondary btn-sm\"  (click)=\"deleteComment(comment.commentId)\">Delete</button>\n        </td>\n      </tr>\n     \n    </tbody>\n  </table>\n  \n </div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PostapiService } from 'src/app/service/postapi.service';\n\n@Component({\n  selector: 'app-manage-comments',\n  templateUrl: './manage-comments.component.html',\n  styleUrls: ['./manage-comments.component.css']\n})\nexport class ManageCommentsComponent {\n  comments:any;\n  userRole:any=localStorage.getItem(\"userRole\");\n  loginStatus:any=localStorage.getItem(\"loginStatus\");\n \n  userId:any=Number(localStorage.getItem(\"userId\"));\n  constructor(private service:PostapiService,private router:Router)\n  {\n    if(this.userRole==\"ADMIN\")\n  {\n    this.service.getAllComments().subscribe(\n      response => {\n        console.log(response);\n        this.comments=response;\n      }\n    );\n  }\n  else\n  {\n    this.service.getCommentsByUserId(this.userId).subscribe(\n      response => {\n        console.log(response);\n        this.comments=response;\n      }\n    );\n    }\n\n  }\n\n  deleteComment(commentId:any)\n  {\n    if(confirm('Do you really want to delete this comment?'))\n    {\n     this.service.deleteCommentByCommentId(commentId).subscribe(\n      response => {alert('comment deleted!!');\n        window.location.reload();\n    }\n      \n    );\n    }\n\n\n   \n  }\n\n  logout()\n  {\n    localStorage.clear();\n    this.router.navigate(['signin']);\n    \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}