{"ast":null,"code":"import { Comment } from '../../model/Comment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../service/postapi.service\";\nimport * as i3 from \"@angular/common\";\nfunction UpdateCommentComponent_a_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 17);\n    i0.ɵɵtext(1, \"Manage Users\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class UpdateCommentComponent {\n  constructor(router, service, activatedRoute) {\n    this.router = router;\n    this.service = service;\n    this.activatedRoute = activatedRoute;\n    this.userRole = localStorage.getItem(\"userRole\");\n    this.loginStatus = localStorage.getItem(\"loginStatus\");\n    this.commentId = this.activatedRoute.snapshot.params['commentId'];\n    //alert(this.commentId);\n    this.service.getCommentBycommentId(this.commentId).subscribe(response => {\n      this.comment = response;\n      console.log(response);\n    });\n  }\n  updateComment(commentId, content) {\n    this.comment = new Comment(commentId, content);\n    this.service.updateComment(this.comment).subscribe(response => {\n      console.log(response);\n      alert('comment updated!!');\n      this.router.navigate(['manage-comments']);\n    });\n    console.log(this.comment);\n  }\n  logout() {\n    localStorage.clear();\n    this.router.navigate(['signin']);\n  }\n}\nUpdateCommentComponent.ɵfac = function UpdateCommentComponent_Factory(t) {\n  return new (t || UpdateCommentComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.PostapiService), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\nUpdateCommentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateCommentComponent,\n  selectors: [[\"app-update-comment\"]],\n  decls: 38,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"btn\", \"btn-primary\", \"float-end\", 3, \"click\"], [1, \"jumbotron\"], [1, \"display-4\"], [1, \"lead\"], [\"href\", \"/manage-posts\", \"role\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-sm\"], [\"href\", \"/manage-comments\", \"role\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-sm\"], [\"class\", \"btn btn-primary btn-sm\", \"href\", \"/manage-users\", \"role\", \"button\", 4, \"ngIf\"], [1, \"mb-3\"], [\"for\", \"exampleFormControlInput1\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"exampleFormControlInput1\", \"placeholder\", \"Enter post Id\", \"readonly\", \"\", \"required\", \"\", 1, \"form-control\", 3, \"value\"], [\"commentId\", \"\"], [\"for\", \"exampleFormControlTextarea1\", 1, \"form-label\"], [\"id\", \"exampleFormControlTextarea1\", \"placeholder\", \"Enter post Content\", \"rows\", \"3\", \"required\", \"\", 1, \"form-control\"], [\"content\", \"\"], [\"type\", \"Submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"Reset\", 1, \"btn\", \"btn-secondary\"], [\"href\", \"/manage-users\", \"role\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-sm\"]],\n  template: function UpdateCommentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"br\");\n      i0.ɵɵelementStart(2, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function UpdateCommentComponent_Template_button_click_2_listener() {\n        return ctx.logout();\n      });\n      i0.ɵɵtext(3, \"Logout\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"h1\", 3);\n      i0.ɵɵtext(6, \"Update Comment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"p\", 4)(8, \"a\", 5);\n      i0.ɵɵtext(9, \"Manage Posts\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(10, \"\\u00A0 \");\n      i0.ɵɵelementStart(11, \"a\", 6);\n      i0.ɵɵtext(12, \"Manage Comments\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(13, \"\\u00A0 \");\n      i0.ɵɵtemplate(14, UpdateCommentComponent_a_14_Template, 2, 0, \"a\", 7);\n      i0.ɵɵtext(15, \"\\u00A0 \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(16, \"br\")(17, \"br\");\n      i0.ɵɵelementStart(18, \"h3\");\n      i0.ɵɵtext(19, \"Update Comment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 8)(21, \"label\", 9);\n      i0.ɵɵtext(22, \"Comment Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 10, 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 8)(26, \"label\", 12);\n      i0.ɵɵtext(27, \" Comment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"textarea\", 13, 14);\n      i0.ɵɵtext(30);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(31, \"div\", 8)(32, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function UpdateCommentComponent_Template_button_click_32_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r1 = i0.ɵɵreference(24);\n        const _r2 = i0.ɵɵreference(29);\n        return i0.ɵɵresetView(ctx.updateComment(_r1.value, _r2.value));\n      });\n      i0.ɵɵtext(33, \"Update Comment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \"\\u00A0 \");\n      i0.ɵɵelementStart(35, \"button\", 16);\n      i0.ɵɵtext(36, \"Reset\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(37, \"br\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngIf\", ctx.userRole == \"ADMIN\");\n      i0.ɵɵadvance(9);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.comment.commentId);\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate(ctx.comment.content);\n    }\n  },\n  dependencies: [i3.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,OAAO,QAAQ,qBAAqB;;;;;;;ICOzCC,6BAA+F;IAAAA,4BAAY;IAAAA,iBAAI;;;ADCnH,OAAM,MAAOC,sBAAsB;EAKjCC,YAAoBC,MAAa,EAAUC,OAAsB,EAAUC,cAA6B;IAApF,WAAM,GAANF,MAAM;IAAiB,YAAO,GAAPC,OAAO;IAAyB,mBAAc,GAAdC,cAAc;IAFzF,aAAQ,GAAKC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC7C,gBAAW,GAAKD,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IAGjD,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,cAAc,CAACI,QAAQ,CAACC,MAAM,CAAC,WAAW,CAAC;IACjE;IACA,IAAI,CAACN,OAAO,CAACO,qBAAqB,CAAC,IAAI,CAACH,SAAS,CAAC,CAACI,SAAS,CACzDC,QAAQ,IAAI;MAAC,IAAI,CAACC,OAAO,GAACD,QAAQ;MAAEE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IAAC,CAAC,CAC7D;EACH;EAGAI,aAAa,CAACT,SAAa,EAACU,OAAW;IAErC,IAAI,CAACJ,OAAO,GAAC,IAAIf,OAAO,CAACS,SAAS,EAACU,OAAO,CAAC;IAC3C,IAAI,CAACd,OAAO,CAACa,aAAa,CAAC,IAAI,CAACH,OAAO,CAAC,CAACF,SAAS,CACjDC,QAAQ,IAAG;MAACE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MAChCM,KAAK,CAAC,mBAAmB,CAAC;MAC1B,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;IAC3C,CAAC,CACA;IAEDL,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,OAAO,CAAC;EAE3B;EAEAO,MAAM;IAEJf,YAAY,CAACgB,KAAK,EAAE;IACpB,IAAI,CAACnB,MAAM,CAACiB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAElC;;AAlCWnB,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCVnC3B,8BAAuB;MACnBA,qBAAI;MAEJA,iCAA8D;MAAnBA;QAAA,OAAS4B,YAAQ;MAAA,EAAC;MAAC5B,sBAAM;MAAAA,iBAAS;MACjFA,8BAAuB;MACCA,8BAAc;MAAAA,iBAAK;MACxCA,4BAAgB;MACsDA,4BAAY;MAAAA,iBAAI;MAAAA,wBACrF;MAAAA,6BAAwE;MAAAA,gCAAe;MAAAA,iBAAI;MAAAA,wBAC3F;MAAAA,qEAA+G;MAAAA,wBACjH;MAAAA,iBAAI;MAENA,sBAAI;MAEJA,2BAAI;MAAAA,+BAAc;MAAAA,iBAAK;MACvBA,+BAAkB;MAC2CA,2BAAU;MAAAA,iBAAQ;MAC3EA,iCAAgK;MAClKA,iBAAM;MAENA,+BAAkB;MAC6CA,yBAAO;MAAAA,iBAAQ;MAC5EA,yCAA6H;MAAAA,aAAmB;MAAAA,iBAAW;MAG/JA,+BAAkB;MAEgCA;QAAAA;QAAA;QAAA;QAAA,OAASA,sDAA4C;MAAA,EAAC;MAACA,+BAAc;MAAAA,iBAAS;MAAAA,wBAC5H;MAAAA,mCAA+C;MAAAA,sBAAK;MAAAA,iBAAS;MAEjEA,sBAAI;MACJA,iBAAM;;;MAtBoEA,gBAAuB;MAAvBA,8CAAuB;MAQOA,eAA6B;MAA7BA,wDAA6B;MAKJA,eAAmB;MAAnBA,yCAAmB","names":["Comment","i0","UpdateCommentComponent","constructor","router","service","activatedRoute","localStorage","getItem","commentId","snapshot","params","getCommentBycommentId","subscribe","response","comment","console","log","updateComment","content","alert","navigate","logout","clear","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Edubridge-Final-project\\Main Project\\blog-frontend-main\\blog-frontend-main (1)\\blog-frontend-main\\src\\app\\component\\update-comment\\update-comment.component.ts","C:\\Edubridge-Final-project\\Main Project\\blog-frontend-main\\blog-frontend-main (1)\\blog-frontend-main\\src\\app\\component\\update-comment\\update-comment.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Comment } from '../../model/Comment';\nimport { PostapiService } from '../../service/postapi.service';\n\n@Component({\n  selector: 'app-update-comment',\n  templateUrl: './update-comment.component.html',\n  styleUrls: ['./update-comment.component.css']\n})\nexport class UpdateCommentComponent {\n  comment:any;\n  commentId:any;\n  userRole:any=localStorage.getItem(\"userRole\");\n  loginStatus:any=localStorage.getItem(\"loginStatus\");\n  constructor(private router:Router, private service:PostapiService, private activatedRoute:ActivatedRoute)\n  {\n    this.commentId = this.activatedRoute.snapshot.params['commentId'];\n    //alert(this.commentId);\n    this.service.getCommentBycommentId(this.commentId).subscribe(\n      (response) =>{this.comment=response; console.log(response);}\n    );\n  }\n\n\n  updateComment(commentId:any,content:any)\n  {\n    this.comment=new Comment(commentId,content);\n    this.service.updateComment(this.comment).subscribe(\n     response =>{console.log(response);\n      alert('comment updated!!');\n      this.router.navigate(['manage-comments']);\n    }\n    );\n\n    console.log(this.comment);\n  \n  }\n\n  logout()\n  {\n    localStorage.clear();\n    this.router.navigate(['signin']);\n    \n  }\n\n}\n","<div class=\"container\">\n    <br>\n  \n    <button class=\"btn btn-primary float-end \" (click)=\"logout()\">Logout</button>\n<div class=\"jumbotron\">\n  <h1 class=\"display-4\">Update Comment</h1>\n   <p class=\"lead\">\n    <a class=\"btn btn-primary btn-sm\" href=\"/manage-posts\" role=\"button\">Manage Posts</a>&nbsp;\n    <a class=\"btn btn-primary btn-sm\" href=\"/manage-comments\" role=\"button\">Manage Comments</a>&nbsp;\n    <a class=\"btn btn-primary btn-sm\" href=\"/manage-users\" role=\"button\" *ngIf=\"userRole=='ADMIN'\">Manage Users</a>&nbsp;\n  </p>\n</div>\n<br><br>\n\n<h3>Update Comment</h3>\n<div class=\"mb-3\">\n    <label for=\"exampleFormControlInput1\" class=\"form-label\">Comment Id</label>\n    <input type=\"number\" class=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Enter post Id\" value=\"{{comment.commentId}}\" readonly  required #commentId>\n  </div>\n  \n  <div class=\"mb-3\">\n    <label for=\"exampleFormControlTextarea1\" class=\"form-label\"> Comment</label>\n    <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" placeholder=\"Enter post Content\" rows=\"3\"  required #content>{{comment.content}}</textarea>\n  </div>\n  \n<div class=\"mb-3\">\n    \n    <button type=\"Submit\" class=\"btn btn-primary\" (click)=\"updateComment(commentId.value,content.value)\">Update Comment</button>&nbsp;\n    <button type=\"Reset\" class=\"btn btn-secondary\">Reset</button>\n  </div>\n<br>\n</div>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}